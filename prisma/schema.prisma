generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Horse {
  id              Int            @id @default(autoincrement())
  createdAt       DateTime       @default(now())
  name            String         @unique
  birthday        DateTime?
  gender          TypeGender?
  profileImageUrl String?
  place           String?
  images          String[]
  createAsParent  Boolean        @default(false)
  fatherName      String?
  motherName      String?
  father          Horse?         @relation("Father", fields: [fatherName], references: [name])
  fatherChildren  Horse[]        @relation("Father")
  mother          Horse?         @relation("Mother", fields: [motherName], references: [name])
  motherChildren  Horse[]        @relation("Mother")
  photos          PhotosEntity[]
  news            News?
  veterinarian    Veterinarian?
  farrier         Farrier?
}

model News {
  id        Int       @id @default(autoincrement())
  type      TypeTab   @default(news)
  tabs      NewsTab[]
  horseName String?   @unique
  horse     Horse?    @relation(fields: [horseName], references: [name])
}

model NewsTab {
  id          Int     @id @default(autoincrement())
  date        String
  title       String
  description String
  executedBy  String?
  newsId      Int?
  news        News?   @relation(fields: [newsId], references: [id], onDelete: Cascade)
}

model Veterinarian {
  id        Int      @id @default(autoincrement())
  type      TypeTab  @default(veterinarian)
  horseName String?  @unique
  tabs      VetTab[]
  horse     Horse?   @relation(fields: [horseName], references: [name])
}

model VetTab {
  id           Int           @id @default(autoincrement())
  date         String
  title        String
  description  String
  executedBy   String?
  vetId        Int?
  veterinarian Veterinarian? @relation(fields: [vetId], references: [id], onDelete: Cascade)
}

model Farrier {
  id        Int          @id @default(autoincrement())
  type      TypeTab      @default(farrier)
  horseName String?      @unique
  tabs      FarrierTab[]
  horse     Horse?       @relation(fields: [horseName], references: [name])
}

model FarrierTab {
  id          Int      @id @default(autoincrement())
  date        String
  title       String
  description String
  executedBy  String?
  farrierId   Int?
  farrier     Farrier? @relation(fields: [farrierId], references: [id], onDelete: Cascade)
}

model PhotosEntity {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  src       String
  alt       String
  horseName String
  photos    Horse    @relation(fields: [horseName], references: [name], onDelete: Cascade)
}

enum TypeGender {
  mare
  gelding
  stallion
}

enum TypeTab {
  news
  veterinarian
  farrier
}
